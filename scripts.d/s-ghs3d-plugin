
function s-ghs3d-plugin-vcs()
{
    echo default
    echo none
    echo git
    echo https://gitlab.pleiade.edf.fr/salome/ghs3dplugin
}

function s-ghs3d-plugin-cea-vcs()
{
    echo edf
    echo none
    echo git
    echo https://codev-tuleap.cea.fr/plugins/git/salome/ghs3dplugin
}

function s-ghs3d-plugin-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo https://minio.retd.edf.fr/salome/YAMM/Public/SALOME/sources/modules
    echo GHS3DPLUGIN_SRC_$VERSION.tgz
}

function s-ghs3d-plugin-salome-module()
{
    echo GHS3DPLUGIN
}

function s-ghs3d-plugin-common-build-depends()
{
    echo s-salome-configuration
    echo s-cmake
    echo os@-sphinx-common
}

function s-ghs3d-plugin-ng-build-depends()
{
    echo s-salome-bin
}

function s-ghs3d-plugin-default-depends()
{
    echo s-salome-kernel
    echo s-salome-gui
    echo s-geom
    echo s-smesh
}

function s-ghs3d-plugin-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var GHS3DPLUGIN_ROOT_DIR $PREFIX
    add-to-var LD_LIBRARY_PATH   $PREFIX/lib/salome
    add-to-var PYTHONPATH        $PREFIX/lib/salome
    add-to-var PYTHONPATH        $PREFIX/bin/salome
    add-to-var PYTHONPATH        \
               $PREFIX/lib/python$PYTHON_VERSION/site-packages/salome
    add-to-var SMESH_MeshersList GHS3DPlugin
    add-to-var SalomeAppConfig   $PREFIX/share/salome/resources/ghs3dplugin
}

function s-ghs3d-plugin-ctest-dir()
{
    local PREFIX=$1

    echo $PREFIX/bin/salome/test
}

function s-ghs3d-plugin-mpi-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_CXX_COMPILER=$(get-os-bin mpicxx)
}

function s-ghs3d-plugin-common-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local CDEBUG=$(is-enabled cmake-debug)
    local DISDOC=$(is-enabled no-doc)

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE Release)
    echo ${CDEBUG:+"-DSALOME_CMAKE_DEBUG=ON"}
    echo ${DISDOC:+"-DSALOME_BUILD_DOC=OFF"}
}

function s-ghs3d-plugin-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    cmake "${OPTIONS[@]}" ../src
}

function s-ghs3d-plugin-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-ghs3d-plugin-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-ghs3d-plugin-prefix()
{
    echo NONE
}
