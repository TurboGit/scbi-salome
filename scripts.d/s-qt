
# Note that OpenGL support is needed here as required by PyQt
# later. We note them here as the real support depends on the
# hardware.
#
# apt install libgles2-mesa-dev
# apt install libglu1-mesa-dev
# apt install mesa-common-dev

with-variant native \
             os@-qtbase5-dev:[v] os@-qttools5-dev:[v] os@-qt5help5 \
             os@-qt5x11extras5-dev os@-qt5opengl5-dev os@-qt5printsupport5 \
             os@-qt5svg5-dev os@-qtxmlpatterns5-dev-tools os@-qwt-qt5-dev \
 --env 'set-var QT5_ROOT_DIR /usr' \
       'add-to-var CMAKE_PREFIX_PATH $QT5_ROOT_DIR/lib/$TARGET/cmake/Qt5' \
       'add-to-var CMAKE_PREFIX_PATH $QT5_ROOT_DIR/lib/$TARGET/cmake/Qt5LinguistTools'

function s-qt-vcs()
{
    echo edf
    echo none
    echo git
    echo https://github.com/qt/qt5.git
}

function s-qt-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo https://minio.retd.edf.fr/salome/YAMM/Public/SALOME/sources/prerequis
    echo qt-everywhere-opensource-src-$VERSION.tar.gz
}

function s-qt-build-depends()
{
    echo os@-autoconf
}

function s-qt-depends()
{
    # Avoid adding fonts
    echo libfontconfig1-dev
    # Avoid using embedded libraries
    echo libframe6
    echo libfreetype6-dev
    echo libgl1-mesa-dev
    echo libglu1-mesa-dev
    echo libgnomecanvas2-dev
    echo libgnomecanvasmm-2.6-dev
    echo libjpeg-dev
    echo libpng-dev
    echo libpq5
    echo libsm6
    echo libssl-dev
    echo libx11-dev
    echo libxcb-composite0-dev
    echo libxcb-cursor-dev
    echo libxcb-damage0-dev
    echo libxcb-dpms0-dev
    echo libxcb-dri2-0-dev
    echo libxcb-dri3-dev
    echo libxcb-ewmh-dev
    echo libxcb-glx0-dev
    echo libxcb-icccm4-dev
    echo libxcb-image0-dev
    echo libxcb-imdkit-dev
    echo libxcb-keysyms1-dev
    echo libxcb-present-dev
    echo libxcb-randr0-dev
    echo libxcb-record0-dev
    echo libxcb-render-util0-dev
    echo libxcb-render0-dev
    echo libxcb-res0-dev
    echo libxcb-screensaver0-dev
    echo libxcb-shape0-dev
    echo libxcb-shm0-dev
    echo libxcb-sync-dev
    echo libxcb-util0-dev
    echo libxcb-xf86dri0-dev
    echo libxcb-xfixes0-dev
    echo libxcb-xinerama0-dev
    echo libxcb-xinput-dev
    echo libxcb-xkb-dev
    echo libxcb-xrm-dev
    echo libxcb-xtest0-dev
    echo libxcb-xv0-dev
    echo libxcb-xvmc0-dev
    echo libxcb1-dev
    echo libxkbcommon-x11-dev
    echo libxrender-dev
    echo zlib1g-dev
}

function s-qt-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    QT5_ROOT_DIR       $PREFIX
    set-var    QTDIR              $PREFIX
    set-var    QT_XKB_CONFIG_ROOT /usr/share/X11/xkb

    add-to-var CMAKE_PREFIX_PATH           $PREFIX/lib/cmake
    add-to-var PATH                        $PREFIX/bin
    add-to-var QT_LIB_DIR                  $PREFIX/lib
    add-to-var LD_LIBRARY_PATH             $PREFIX/lib
    add-to-var C_INCLUDE_PATH              $PREFIX/include
    add-to-var CPLUS_INCLUDE_PATH          $PREFIX/include
    add-to-var QT_PLUGIN_PATH              $PREFIX/plugins
    add-to-var QT_QPA_PLATFORM_PLUGIN_PATH $PREFIX/plugins
}

function s-qt-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo --prefix=$PREFIX

    echo -opensource
    echo -confirm-license

    echo -skip
    echo qtwebengine
    echo -skip
    echo wayland
    echo -skip
    echo qtgamepad

    echo -nomake
    echo examples
    echo -nomake
    echo tests

    echo -no-rpath
    echo -xcb
    echo -xkbcommon
    echo -qt-libpng
}

function s-qt-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    ../src/configure "${OPTIONS[@]}"
}

function s-qt-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-qt-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-qt-prefix()
{
    echo NONE
}
