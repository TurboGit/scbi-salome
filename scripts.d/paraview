
function paraview-vcs()
{
    echo edf
    echo none
    echo git
    echo https://github.com/Kitware/ParaView.git
}

function paraview-tar()
{
    local VERSION=$1

    echo default
    echo wget
    echo http://ftp.pleiade.edf.fr/projets/YAMM/Public/SALOME/sources/prerequis
    echo ParaView-$VERSION-source.tar.gz
}

function paraview-patches()
{
    echo pv-58-coincident.patch
}

function paraview-gdal-deps
{
    echo libgdal-dev
}

function paraview-headless-deps
{
    echo libegl1-mesa-dev
}

function paraview-ospray-deps
{
    echo ospray
}

function paraview-vrpn-deps
{
    echo vrpn
}

function paraview-build-depends()
{
    echo cmake
    echo qtxmlpatterns5-dev-tools
}

function paraview-depends()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo python3-dev
    echo libx11-dev
    echo libxt-dev
    echo libopenmpi-dev

    echo qt5-default
    echo libqt5x11extras5-dev
    echo libqt5help5
    echo qttools5-dev
    echo libqt5svg5-dev
    echo openturns
    echo libhdf5-dev

    # add all depends for variants if any

    for v in $(all-variants $VARIANT); do
        fn-exists paraview-$v-deps
        if [ $? = 0 ]; then
            paraview-$v-deps
        fi
    done
}

function paraview-env()
{
    local PREFIX=$1
    local TARGET=$2

    local CMAKE_PV=$(last-modified-directory "$PREFIX/lib/cmake/paraview-*")

    add-to-var CMAKE_PREFIX_PATH ${CMAKE_PV}
    add-to-var CMAKE_PREFIX_PATH ${CMAKE_PV}/vtk

    add-to-var PARAVIEW_ROOT_DIR    $PREFIX
    add-to-var PARAVIEW_INSTALL_DIR $PREFIX
    add-to-var LD_LIBRARY_PATH      $PREFIX/lib
    add-to-var PATH                 $PREFIX/bin
    add-to-var PYTHONPATH           \
               $PREFIX/lib/python$PYTHON_VERSION/site-packages
}

function paraview-build-env()
{
    local PREFIX=$1
    local TARGET=$2

    built-compiler
}

function paraview-common-options()
{
    echo -DCMAKE_BUILD_TYPE:STRING=$(get-build-type CMAKE paraview Release)
    echo -DCMAKE_INSTALL_PREFIX=$PREFIX

    echo -DBUILD_EXAMPLES:BOOL=OFF
    echo -DBUILD_TESTING:BOOL=OFF

    echo -DPARAVIEW_USE_QT:BOOL=ON
    echo -DPARAVIEW_BUILD_SHARED_LIBS:BOOL=ON
    echo -DPARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=ON
    echo -DPARAVIEW_INSTALL_DEVELOPMENT_FILES=ON

    echo -DPARAVIEW_ENABLE_OPENTURNS=ON
    echo -DPARAVIEW_ENABLE_WEB:BOOL=OFF

    echo -DPARAVIEW_USE_PYTHON:BOOL=ON
    echo -DPARAVIEW_USE_MPI:BOOL=ON

    # VTK

    echo -DVTK_ALL_NEW_OBJECT_FACTORY=ON
    echo -DVTK_BUILD_QT_DESIGNER_PLUGIN:BOOL=OFF
    echo -DVTK_NO_PYTHON_THREADS=OFF
    echo -DVTK_PYTHON_FULL_THREADSAFE=ON
    echo -DVTK_PYTHON_VERSION=3
    echo -DVTK_SMP_IMPLEMENTATION_TYPE=OpenMP
    echo -DVTK_USE_64BIT_IDS:BOOL=ON
    echo -DVTK_USE_OGGTHEORA_ENCODER:BOOL=ON
    echo -DVTK_MODULE_ENABLE_VTK_RenderingLOD=YES
    echo -DVTK_MODULE_ENABLE_VTK_FiltersCore=YES
    echo -DVTK_MODULE_ENABLE_VTK_FiltersParallelGeometry=YES
    echo -DVTK_MODULE_ENABLE_VTK_FiltersParallelMPI=YES
    echo -DVTK_MODULE_ENABLE_VTK_ParallelMPI=YES
    echo -DVTK_MODULE_ENABLE_VTK_CommonCore=YES
    echo -DVTK_MODULE_ENABLE_VTK_IOCore=YES
    echo -DVTK_MODULE_ENABLE_VTK_IOEnSight=YES
    echo -DVTK_MODULE_ENABLE_VTK_IOInfovis=YES

    # PLUGINS

    echo -DPARAVIEW_AUTOLOAD_PLUGIN_AcceleratedAlgorithms=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_CDIReader=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_DigitalRockPhysics=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_EmbossingRepresentations=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_GeodesicMeasurement=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_LagrangianParticleTracker=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_MooseXfemClip=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_StreamLinesRepresentation=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_ThickenLayeredCells=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_VTKmFilters=ON
}

function paraview-ospray-options()
{
    echo -DPARAVIEW_ENABLE_RAYTRACING:BOOL=ON
}

function paraview-vrpn-options()
{
    echo -DPARAVIEW_USE_MPI:BOOL=ON
    echo -DPARAVIEW_BUILD_PLUGIN_VRPlugin:BOOL=ON
    echo -DPARAVIEW_USE_VRPN:BOOL=ON
    echo -DPARAVIEW_AUTOLOAD_PLUGIN_VRPlugin=ON
    echo -DVRPN_LIBRARY=$VRPN_ROOT_DIR/lib/libvrpn.a
    echo -DVRPN_INCLUDE_DIR=$VRPN_ROOT_DIR/include
}

function paraview-gdal-options()
{
    echo -DPARAVIEW_ENABLE_GDAL:BOOL=ON
}

function paraview-headless-options()
{
    local TARGET=$1

    echo -DVTK_OPENGL_HAS_EGL:BOOL=ON
    echo -DEGL_INCLUDE_DIR=/usr/include/EGL/egl.h.
    echo -DEGL_LIBRARY=/usr/lib/$TARGET/libEGL.so.
    echo -DEGL_opengl_LIBRARY=/usr/lib/$TARGET/libOpenGL.so
}

function paraview-options()
{
    local VARIANT=$1
    local TARGET=$2

    paraview-common-options $TARGET

    # add options for all variants if any

    for v in $(all-variants $VARIANT); do
        fn-exists paraview-$v-options
        if [ $? = 0 ]; then
            paraview-$v-options $TARGET
        fi
    done
}

function paraview-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3
    local OPTIONS="$(paraview-options $VARIANT $TARGET)"

    cmake $OPTIONS ../src
}

function paraview-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function paraview-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function paraview-prefix()
{
    echo NONE
}
