
with-variant native-serial libhdf5-dev hdf5-tools \
       --env 'add-to-var HDF5_ROOT /usr/lib/x86_64-linux-gnu/hdf5/serial' \
             'add-to-var HDF5_INC /usr/include/hdf5/serial' \
             'add-to-var HDF5_LIB /usr/lib/x86_64-linux-gnu/hdf5/serial' \
             'add-to-var HDF5_BIN /usr/bin'

with-variant native-mpi libhdf5-dev libhdf5-openmpi-dev hdf5-tools libopenmpi-dev \
       --env 'add-to-var HDF5_ROOT /usr/lib/x86_64-linux-gnu/hdf5/openmpi' \
             'add-to-var HDF5_PREFER_PARALLEL true' \
             'add-to-var HDF5_INC /usr/include/hdf5/openmpi' \
             'add-to-var HDF5_LIB /usr/lib/x86_64-linux-gnu/hdf5/openmpi' \
             'add-to-var HDF5_BIN /usr/bin'

function s-hdf5-vcs()
{
    echo edf
    echo none
    echo git
    echo https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git
}

function s-hdf5-tar()
{
    local VERSION=$1

    echo default
    echo wget
    echo http://ftp.pleiade.edf.fr/projets/YAMM/Public/SALOME/sources/prerequis
    echo hdf5-$VERSION.tar.gz
}

function s-hdf5-build-depends()
{
    echo cmake
    echo sphinx-common
    echo sphinx-intl
}

function s-hdf5-depends()
{
    echo zlib1g-dev
}

function s-hdf5-mpi-depends()
{
    s-hdf5-depends
    echo libopenmpi-dev
}

function s-hdf5-env()
{
    local PREFIX=$1
    local TARGET=$2

    add-to-var CMAKE_PREFIX_PATH  $PREFIX/share/cmake/hdf5
    add-to-var HDF5_ROOT_DIR      $PREFIX

    #  For medfichier autoconf:
    add-to-var HDF5_INC           $PREFIX/include
    add-to-var HDF5_LIB           $PREFIX/lib
    add-to-var HDF5_BIN           $PREFIX/bin

    add-to-var PATH               $PREFIX/bin
    add-to-var C_INCLUDE_PATH     $HDF5_C_INCLUDE_DIR
    add-to-var CPLUS_INCLUDE_PATH $HDF5_C_INCLUDE_DIR
    add-to-var LIBRARY_PATH       $PREFIX/lib
    add-to-var LD_LIBRARY_PATH    $PREFIX/lib
}

function s-hdf5-mpi-options()
{
    local TARGET=$1

    echo -DHDF5_ENABLE_PARALLEL=ON
    echo -DCMAKE_C_COMPILER=$(which mpicc)

    echo -DHDF5_BUILD_JAVA:BOOL=OFF
    echo -DHDF5_ENABLE_THREADSAFE:BOOL=OFF
    echo -DHDF5_BUILD_CPP_LIB:BOOL=OFF
}

function s-hdf5-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DHDF5_BUILD_HL_LIB=ON
    echo -DHDF5_BUILD_TOOLS=ON
    echo -DBUILD_SHARED_LIBS=ON
    echo -DHDF5_ENABLE_Z_LIB_SUPPORT=ON
    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE hdf5 Release)

    call-variant-hooks options $PREFIX $TARGET $VARIANT
}

function s-hdf5-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS="$(s-hdf5-options $PREFIX $TARGET $VARIANT)"

    cmake $OPTIONS ../src
}

function s-hdf5-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-hdf5-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-hdf5-prefix()
{
    echo NONE
}
