
with-variant native-serial os@-hdf5-dev os@-hdf5-tools \
      --env  'set-var HDF5_LIB $(get-os-lib-dir serial/libhdf5.so)' \
             'set-var HDF5_LIBRARIES $(get-os-lib serial/libhdf5.so)' \
             'set-var HDF5_INC $(get-os-inc-dir serial/hdf5.h)' \
             'set-var HDF5_ROOT_DIR /usr' \
             'set-var HDF5_ROOT $HDF5_LIB' \
             'set-var HDF5_DIR $HDF5_LIB' \
             'add-to-var HDF5_INCLUDE_DIRS $HDF5_INC' \
             'add-to-var HDF5_INCLUDE_DIR $HDF5_INC' \
             'set-var HDF5_BIN /usr/bin' \
             'add-to-var C_INCLUDE_PATH $HDF5_INC'  \
             'add-to-var CPLUS_INCLUDE_PATH $HDF5_INC'  \
             'add-to-var LIBRARY_PATH $HDF5_LIB'

with-variant native-mpi os@-hdf5-dev os@-hdf5-tools \
             os@-hdf5-openmpi-dev  os@-openmpi-dev \
       --env 'set-var HDF5_LIB $(get-os-lib-dir openmpi/libhdf5.so)' \
             'set-var HDF5_LIBRARIES $(get-os-lib openmpi/libhdf5.so)' \
             'set-var HDF5_INC $(get-os-inc-dir openmpi/hdf5.h)' \
             'set-var HDF5_ROOT_DIR /usr' \
             'set-var HDF5_ROOT $HDF5_LIB' \
             'set-var HDF5_DIR $HDF5_LIB' \
             'add-to-var HDF5_INCLUDE_DIRS $HDF5_INC' \
             'add-to-var HDF5_INCLUDE_DIR $HDF5_INC' \
             'set-var HDF5_BIN /usr/bin' \
             'set-var HDF5_PREFER_PARALLEL true' \
             'add-to-var C_INCLUDE_PATH $HDF5_INC'  \
             'add-to-var CPLUS_INCLUDE_PATH $HDF5_INC'  \
             'add-to-var LIBRARY_PATH $HDF5_LIB'

#  The default native variant is serial and it is the one that will be
#  picked by the auto variant if the version match.
with-variant native os@-hdf5-dev:[v] os@-hdf5-tools:[v] \
      --env  'set-var HDF5_LIB $(get-os-lib-dir serial/libhdf5.so)' \
             'set-var HDF5_LIBRARIES $(get-os-lib serial/libhdf5.so)' \
             'set-var HDF5_INC $(get-os-inc-dir serial/hdf5.h)' \
             'set-var HDF5_ROOT_DIR /usr' \
             'set-var HDF5_ROOT $HDF5_LIB' \
             'set-var HDF5_DIR $HDF5_LIB' \
             'add-to-var HDF5_INCLUDE_DIRS $HDF5_INC' \
             'add-to-var HDF5_INCLUDE_DIR $HDF5_INC' \
             'set-var HDF5_BIN /usr/bin' \
             'add-to-var C_INCLUDE_PATH $HDF5_INC'  \
             'add-to-var CPLUS_INCLUDE_PATH $HDF5_INC'  \
             'add-to-var LIBRARY_PATH $HDF5_LIB'

function s-hdf5-vcs()
{
    echo edf
    echo none
    echo git
    echo https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git
}

function s-hdf5-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo https://minio.retd.edf.fr/salome/YAMM/Public/SALOME/sources/prerequis
    echo hdf5-$VERSION.tar.gz
}

function s-hdf5-build-depends()
{
    local DISDOC=$(is-enabled no-doc)

    [[ -z ${DISDOC} ]] && echo os@-sphinx-common
    [[ -z ${DISDOC} ]] && echo os@-sphinx-intl

    echo s-cmake
}

function s-hdf5-mpi-depends()
{
    echo s-openmpi
}

function s-hdf5-common-depends()
{
    echo os@-zlib1g-dev
}

function s-hdf5-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    HDF5_ROOT_DIR      $PREFIX

    #  For medfichier autoconf:
    add-to-var HDF5_INC           $PREFIX/include
    add-to-var HDF5_LIB           $PREFIX/lib
    add-to-var HDF5_BIN           $PREFIX/bin
    set-var    HDF5_ROOT          $PREFIX/lib
    set-var    HDF5_DIR           $PREFIX/lib

    add-to-var HDF5_INCLUDE_DIRS  $PREFIX/include
    add-to-var HDF5_INCLUDE_DIR   $PREFIX/include

    add-to-var PATH               $PREFIX/bin
    add-to-var C_INCLUDE_PATH     $PREFIX/include
    add-to-var CPLUS_INCLUDE_PATH $PREFIX/include
    add-to-var LIBRARY_PATH       $PREFIX/lib
    add-to-var LD_LIBRARY_PATH    $PREFIX/lib
    add-to-var CMAKE_PREFIX_PATH  $PREFIX/share/cmake/hdf5
}

function s-hdf5-mpi-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DHDF5_ENABLE_PARALLEL=ON
    echo -DCMAKE_C_COMPILER=$(command -v mpicc)

    echo -DHDF5_BUILD_JAVA:BOOL=OFF
    echo -DHDF5_ENABLE_THREADSAFE:BOOL=OFF
    echo -DHDF5_BUILD_CPP_LIB:BOOL=OFF
}

function s-hdf5-common-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DHDF5_BUILD_HL_LIB=ON
    echo -DHDF5_BUILD_TOOLS=ON
    echo -DBUILD_SHARED_LIBS=ON
    echo -DHDF5_ENABLE_Z_LIB_SUPPORT=ON
    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE Release)
}

function s-hdf5-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    cmake "${OPTIONS[@]}" ../src
}

function s-hdf5-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-hdf5-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-hdf5-prefix()
{
    echo NONE
}
