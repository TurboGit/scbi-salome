
with-variant native-serial os@-hdf5-dev os@-hdf5-tools \
      --env  'add-to-var HDF5_ROOT_DIR /usr' \
             'add-to-var HDF5_LIB $(get-os-lib-dir serial/libhdf5.so)' \
             'add-to-var HDF5_INC $(get-os-inc-dir serial/hdf5.h)' \
             'add-to-var HDF5_ROOT $HDF5_LIB' \
             'add-to-var HDF5_DIR $HDF5_LIB' \
             'add-to-var HDF5_INCLUDE_DIRS $HDF5_INC' \
             'add-to-var HDF5_BIN /usr/bin'

with-variant native-mpi os@-hdf5-dev os@-hdf5-openmpi-dev os@-hdf5-tools os@-openmpi-dev \
       --env 'add-to-var HDF5_ROOT_DIR /usr' \
             'add-to-var HDF5_LIB $(get-os-lib-dir openmpi/libhdf5.so)' \
             'add-to-var HDF5_INC $(get-os-inc-dir openmpi/hdf5.h)' \
             'add-to-var HDF5_ROOT $HDF5_LIB' \
             'add-to-var HDF5_DIR $HDF5_LIB' \
             'add-to-var HDF5_INCLUDE_DIRS $HDF5_INC' \
             'add-to-var HDF5_PREFER_PARALLEL true'

function s-hdf5-vcs() 
{ 
    echo default
    echo none 
    echo git 
    echo https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git 
} 


function s-hdf5-build-depends()
{
    echo s-cmake-tool
    echo os@-sphinx-common
    echo os@-sphinx-intl
}

function s-hdf5-mpi-depends()
{
    echo libopenmpi-dev
}

function s-hdf5-depends()
{
    echo os@-zlib1g-dev
}

function s-hdf5-env()
{
    local PREFIX=$1
    local TARGET=$2

    add-to-var CMAKE_PREFIX_PATH  $PREFIX/share/cmake/hdf5
    add-to-var HDF5_ROOT_DIR      $PREFIX
    add-to-var HDF5_DIR           $PREFIX/share/cmake/hdf5

    add-to-var HDF5_C_COMPILER_EXECUTABLE $PREFIX/bin/h5cc
    add-to-var HDF5_C_LIBRARY_hdf5        $PREFIX/lib/libhdf5.so
    add-to-var HDF5_C_LIBRARY_hdf5_hl     $PREFIX/lib/libhdf5_hl.so
    add-to-var HDF5_C_INCLUDE_DIR         $PREFIX/include
    add-to-var HDF5_hdf5_LIBRARY_RELEASE  $HDF5_C_LIBRARY_hdf5

    add-to-var HDF5_LIBRARIES     $PREFIX/lib
    add-to-var HDF5_INCLUDE_DIRS  $PREFIX/include

    #  For medfichier autoconf:
    add-to-var HDF5_INC           $PREFIX/include
    add-to-var HDF5_LIB           $PREFIX/lib
    add-to-var HDF5_BIN           $PREFIX/bin

    add-to-var PATH               $PREFIX/bin
    add-to-var C_INCLUDE_PATH     $HDF5_C_INCLUDE_DIR
    add-to-var CPLUS_INCLUDE_PATH $HDF5_C_INCLUDE_DIR
    add-to-var LIBRARY_PATH       $PREFIX/lib
    add-to-var LD_LIBRARY_PATH    $PREFIX/lib
}

function s-hdf5-mpi-config-options()
{
    local TARGET=$1

    echo -DHDF5_ENABLE_PARALLEL=ON
    echo -DCMAKE_C_COMPILER=$(which mpicc)

    echo -DHDF5_BUILD_JAVA:BOOL=OFF
    echo -DHDF5_ENABLE_THREADSAFE:BOOL=OFF
    echo -DHDF5_BUILD_CPP_LIB:BOOL=OFF
}

function s-hdf5-common-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DHDF5_BUILD_HL_LIB=ON
    echo -DHDF5_BUILD_TOOLS=ON
    echo -DBUILD_SHARED_LIBS=ON
    echo -DHDF5_ENABLE_Z_LIB_SUPPORT=ON
    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE hdf5 Release)
}

function s-hdf5-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS="$(get-config-options $PREFIX $TARGET $VARIANT)"

    cmake $OPTIONS ../src
}

function s-hdf5-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-hdf5-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-hdf5-prefix()
{
    echo NONE
}
