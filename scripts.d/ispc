
# It may be the case that there is no default clang set or the default one
# is not the one required. We use the alternatives support to set the proper
# one.

# update-alternatives --install /usr/bin/clang clang /usr/bin/clang-4.0 30
# update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-4.0 30
# update-alternatives --install /usr/bin/FileCheck FileCheck /usr/bin/FileCheck-4.0 30

# update-alternatives --remove  clang /usr/bin/clang-4.0
# update-alternatives --remove  clang++ /usr/bin/clang++-4.0
# update-alternatives --remove  FileCheck /usr/bin/FileCheck-4.0

function ispc-vcs() 
{ 
    echo default
    echo none 
    echo git 
    echo https://github.com/ispc/ispc.git 
} 


function ispc-build-depends()
{
    local VERSION=$1

    echo cmake
    echo clang-4.0
    echo libclang-4.0-dev
    echo llvm-4.0-tools
    echo zlib1g-dev
    echo flex
    echo bison
    echo m4
    echo libncurses5-dev
}

function ispc-post-setup()
{
    local PREFIX=$1
    local TARGET=$2

    # needed for the config
    rm -fr ../src/.git
    cp -r $SCBI_BDIR/.vcs/ispc/.git ../src
}

function ispc-env()
{
    local PREFIX=$1
    local TARGET=$2

    add-to-var PATH $SCBI_BDIR/install-tools/bin
}

function ispc-config()
{
    local PREFIX=$1
    local TARGET=$2

    cmake -DCMAKE_INSTALL_PREFIX=$PREFIX \
          -DCMAKE_C_COMPILER=clang-4.0 -DCMAKE_CXX_COMPILER=clang++-4.0 ../src
}

function ispc-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function ispc-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function ispc-prefix()
{
    echo $SCBI_BDIR/install-tools
}
