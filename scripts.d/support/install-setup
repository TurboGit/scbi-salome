#!/bin/bash

source $(dirname ${BASH_SOURCE[0]})/install-setup-common

AUTO=0
DIRECTION=

while [[ -n $1 ]]; do
    case "$1" in
        --auto)
            AUTO=1;
            ;;
        --direction)
            DIRECTION=$2;
            shift
            ;;
        *)
            ;;
    esac
    shift;
done

# verify salome-prerequisites version
#
pkg="salome-prerequisites-__SALOMEVERSION__"
status=( $(get-pck-status "$pkg") )

installed=${status[0]}
candidate=${status[1]}
depository=${status[2]}
EXIT=0
if [[ "$installed" == "(none)" ]]; then
    echo "The package salome-prerequisites-__SALOMEVERSION__ is missing."
    echo "Follow these steps to install the package:"
    echo
    echo "      # Refresh your sources.list:"
    echo "          pkcon refresh"
    echo
    echo "      # Install the package:"
    echo "          pkcon install salome-prerequisites-__SALOMEVERSION__"
    echo
    EXIT=1
else
    if [[ "$candidate" != "(none)" && "$installed" != "$candidate" ]] || [[ "$installed" != "$depository" ]]; then
        echo "The package salome-prerequisites installed in your system is not up-to-date"
        echo "Follow these steps to update your package: "
        echo
        echo "      # Remove your obsolete version of salome-prerequisites-__SALOMEVERSION__:"
        echo "          pkcon remove salome-prerequisites-__SALOMEVERSION__"
        echo
        echo "      # Refresh your sources.list:"
        echo "          pkcon refresh"
        echo
        echo "      # Install the package:"
        echo "          pkcon install salome-prerequisites-__SALOMEVERSION__"
        EXIT=1
    fi
fi

if [[ $EXIT -ne "0" ]]; then
    read -p "Do you want to continue installation of salome? [Yes|No] "
    REPLY=${REPLY^^}

    if [[ "$REPLY" == "N" ]] ||
           [[ "$REPLY" == "NON" ]] ||
           [[ "$REPLY" == "NO" ]];
    then
        echo Installation stopped
        INSTALL_DIR=$PWD
        cd ../
        rm -rf $INSTALL_DIR
        exit 0
    fi
fi

#  Check for python3

check-for-python3

#  remove pyhello et hello from salome app resource file

[[ -n $(ls $HOME/.config/salome/SalomeApprc* 2>/dev/null) ]] &&
    for M in PYHELLO HELLO; do
        P1="/<parameter .*name=\"$M\"/d"
        P2="s/(<parameter .*value=\".*)$M;/\1/g"
        P3="s/(<parameter .*value=\".*);$M/\1/g"

        sed -i -E "$P1;$P2;$P3" $HOME/.config/salome/SalomeApprc*
    done

echo Installing SALOME
echo

# In AUTO mode we install in $PWD otherwise the install directory
# is asked to user.
prefix=$PWD
SUDO=""

if [[ $AUTO == 0 ]]; then
    prefix=$(get-install-directory \$HOME/opt/salome)

    SUDO=""

    check-writable $prefix || SUDO=sudo

    $SUDO mkdir -p $prefix
    $SUDO mv * $prefix/
fi

template-conversion $prefix $DISTRIBUTION_ID $OS_VERSION

# Add icon link on desktop
create-desktop-icon $prefix __SALOMEVERSION__

if [[ $AUTO == 0 ]]; then
    $SUDO rm -f $prefix/setup $prefix/install-setup-common

    $SUDO chown $USER -R $prefix
fi

echo "SALOME installation terminated, to start:"
echo "$ $prefix/salome"

exit 0
