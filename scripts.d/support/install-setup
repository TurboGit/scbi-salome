#!/bin/bash

AUTO=0

# check that directory "$1" can be created
function check-writable()
{
    local DIR=$1

    while [[ ! -d $(dirname $DIR) ]]; do
          DIR=$(dirname $DIR)
    done

    [[ -w $(dirname $DIR) ]]
}

while [ ! -z $1 ]; do
    case "$1" in
        --auto)
            AUTO=1;
            break;
            ;;
        *)
            ;;
    esac
    shift;
done

# check for python3
#
if [ -z "$(python --version 2>&1 | grep ' 3\.')" ]; then
   echo Python2 is default, checking for python3
   if [ -f /usr/bin/python3 ]; then
      echo Found Python3 in /usr/bin/python3, setup links
      ln -s /usr/bin/python3 bin/python
      ln -s /usr/bin/python3 bin/salome/python
   else
      echo Cannot found a Python3 installation.
      echo SALOME will not work properly.
   fi
fi

# In auto-mode, do nothing more
[ $AUTO = 1 ] && exit 0

SUDO=""

echo Installing SALOME

while true; do
    echo
    read -e -p "Install into (/opt/salome) : " prefix

    [ -z $prefix ] && prefix=/opt/salome

    # eval $prefix to expand environment variables if any
    prefix=$(eval echo $prefix)

    read -p "Ready to install SALOME in $prefix? (Yes/No/Quit) "

    REPLY=${REPLY^^}

    [ "$REPLY" == "Q" -o "$REPLY" == "QUIT" ] && exit 1

    [ "$REPLY" == "Y" -o "$REPLY" == "YES" ] && break
done

check-writable $prefix || SUDO=sudo

$SUDO mkdir -p $prefix
$SUDO mv * .[a-z]* $prefix/

$SUDO rm -f $prefix/setup

$SUDO chown $USER -R $prefix

cd $prefix

# fix paths in config_appli.xml
sed -i "s,/home.*install,$prefix,g" config_appli.xml
sed -i "s,/home.*application,$prefix,g" config_appli.xml

# Setup the HPC servers, the template file servers.pvsc
# will be used by the following script to create or update
# the file $HOME/.config/ParaView
./salome_hpc_visu_servers.py

echo "SALOME installation terminated, to start:"
echo "$ $prefix/salome"
