#!/bin/bash

AUTO=0

# check that directory "$1" can be created
function check-writable()
{
    local DIR=$1

    while [[ ! -d $(dirname $DIR) ]]; do
          DIR=$(dirname $DIR)
    done

    [[ -w $(dirname $DIR) ]]
}

function template-conversion()
{
    local PREFIX=$1
    # Convert the template files (omniidl, h5hlcc, ...)
    #

    local ORIG_BINDIR="__BINDIR__"
    local BINDIR=$(basename $(ls -1d $PREFIX/BINARIES-*))

    for SCRIPTS in omniORB/bin/omniidl \
                       hdf5/bin/h5hlcc hdf5/bin/h5cc \
                       netcdf/lib/pkgconfig/netcdf.pc \
                       PyQt/bin/pyuic5;
    do
        sed -i "s,${ORIG_BINDIR},$PREFIX/${BINDIR},g" $PREFIX/$BINDIR/$SCRIPTS
    done

    #  For sip

    find $PREFIX/$BINDIR/sip/bin -type f -name "*sip*" |
        while read F; do
            sed -i "s,$ORIG_BINDIR,$PREFIX/${BINDIR},g" $F
        done

    #  For Python

    find $PREFIX/$BINDIR/Python -type f \
         \( -name "Makefile" -o -name "_sysconfigdata*py" \) |
        while read F; do
            sed -i "s,$ORIG_BINDIR,$PREFIX/${BINDIR},g" $F
        done
}

while [ ! -z $1 ]; do
    case "$1" in
        --auto)
            AUTO=1;
            break;
            ;;
        *)
            ;;
    esac
    shift;
done

# check for python3
#
DISTRIBUTION_ID=$(lsb_release -a | grep "Distributor ID:" | awk -F ":" '{print $2}' | xargs )
OS_VERSION=$(lsb_release -a | grep "Release:" | awk -F ":" '{print $2}' | xargs | awk -F "." '{print $1}')

if [[ $DISTRIBUTION_ID -eq "Debian" && $OS_VERSION -eq "9" ]]; then
    echo Python is embedded into salome on debian9
else
    if [ -z "$(python --version 2>&1 | grep ' 3\.')" ]; then
       echo Python2 is default, checking for python3
       if [ -f /usr/bin/python3 ]; then
          echo Found Python3 in /usr/bin/python3, setuup links
          BINDIR=$(basename $(ls -1d BINARIES-*))
          ln -s /usr/bin/python3 $BINDIR/SALOME/bin/salome/python
       else
          echo Cannot found a Python3 installation.
          echo SALOME will not work properly.
       fi
    fi
fi

# In auto-mode, do nothing more
if [[ $AUTO -eq 1 ]]; then
    template-conversion $PWD
    exit 0
fi

SUDO=""

echo Installing SALOME
echo
read -e -p "Install into (/opt/salome) : " prefix

[ -z $prefix ] && prefix=/opt/salome

# eval $prefix to expand environment variables if any
prefix=$(eval echo $prefix)

read -p "Ready to install SALOME in $prefix? (y/n) "

[ "$REPLY" != "y" -a "$REPLY" != "yes" ] && exit 1

check-writable $prefix || SUDO=sudo

$SUDO mkdir -p $prefix
$SUDO mv * .[a-z]* $prefix/
template-conversion $prefix

$SUDO rm -f $prefix/setup

$SUDO chown $USER -R $prefix

# run create_catalog for clusters setup
cd $prefix
[ -f create_catalog.py ] && ./create_catalog.py

# Setup the HPC servers, the template file servers.pvsc
# will be used by the following script to create or update
# the file $HOME/.config/ParaView
./salome_hpc_visu_servers.py

echo "SALOME installation terminated, to start:"
echo "$ $prefix/salome"
