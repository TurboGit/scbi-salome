#!/bin/bash

AUTO=0

# check that directory "$1" can be created
function check-writable()
{
    local DIR=$1

    while [[ ! -d $(dirname $DIR) ]]; do
        DIR=$(dirname $DIR)
    done

    [[ -w $(dirname $DIR) ]]
}

function template-conversion()
{
    local PREFIX=$1
    local DISTRIBUTION_ID=$2
    local OS_VERSION=$3

    # Convert the template files (omniidl, h5hlcc, ...)

    local ORIG_BINDIR="__BINDIR__"
    local BINDIR=$(basename $(ls -1d $PREFIX/BINARIES-*))

    local FILES_LIST=(omniORB/bin/omniidl hdf5/bin/h5hlcc hdf5/bin/h5cc)

    if [[ $DISTRIBUTION_ID -eq "Debian" ]] && [[ $OS_VERSION -eq "9" ]]; then
        FILES_LIST+=(netcdf/lib/pkgconfig/netcdf.pc PyQt/bin/pyuic5)
    fi

    for SCRIPTS in ${FILES_LIST[*]}; do
        sed -i "s,${ORIG_BINDIR},$PREFIX/${BINDIR},g" $PREFIX/$BINDIR/$SCRIPTS
    done

    if [[ $DISTRIBUTION_ID -eq "Debian" ]] && [[ $OS_VERSION -eq "9" ]]; then
        #  For sip

        find $PREFIX/$BINDIR/sip/bin -type f -name "*sip*" |
            while read F; do
                sed -i "s,$ORIG_BINDIR,$PREFIX/${BINDIR},g" $F
            done

        #  For Python

        find $PREFIX/$BINDIR/Python -type f \
             \( -name "Makefile" -o -name "_sysconfigdata*py" \) |
            while read F; do
                sed -i "s,$ORIG_BINDIR,$PREFIX/${BINDIR},g" $F
            done
    fi
}


while [ ! -z $1 ]; do
    case "$1" in
        --auto)
            AUTO=1;
            break;
            ;;
        *)
            ;;
    esac
    shift;
done


# check for python3
#
TMPV=$(lsb_release -r | tr -d '[ \t]')
TMPV=${TMPV#*:}
OS_VERSION=${TMPV%.*}

TMPV=$(lsb_release -i | tr -d '[ \t]')
DISTRIBUTION_ID=${TMPV#*:}
BINDIR=$(basename $(ls -1d BINARIES-*))

if [[ $DISTRIBUTION_ID -eq "Debian" && $OS_VERSION -eq "9" ]]; then
    echo Python is embedded into salome on debian9
elif [[ "$(lsb_release -d)" =~ "Red Hat" ]]; then
    echo Python is embedded into salome on Red Hat
else
    if [ -z "$(python --version 2>&1 | grep ' 3\.')" ]; then
        echo Python2 is default, checking for python3

        if [ -f /usr/bin/python3 ]; then
            echo Found Python3 in /usr/bin/python3, setup links
            ln -s /usr/bin/python3 $BINDIR/SALOME/bin/salome/python
        else
            echo Cannot found a Python3 installation.
            echo SALOME will not work properly.
        fi
    fi
fi


# In auto-mode, do nothing more
if [[ $AUTO -eq 1 ]]; then
    template-conversion $PWD $DISTRIBUTION_ID $OS_VERSION
    exit 0
fi

SUDO=""

echo Installing SALOME

while true; do
    echo
    read -e -p "Install into (/opt/salome) : " prefix

    [ -z $prefix ] && prefix=/opt/salome

    # eval $prefix to expand environment variables if any
    prefix=$(eval echo $prefix)

    read -p "Ready to install SALOME in $prefix? (Yes/No/Quit) "

    REPLY=${REPLY^^}

    [ "$REPLY" == "Q" -o "$REPLY" == "QUIT" ] && exit 1

    [ "$REPLY" == "Y" -o "$REPLY" == "YES" ] && break
done

check-writable $prefix || SUDO=sudo

$SUDO mkdir -p $prefix
$SUDO mv * .[a-z]* $prefix/
template-conversion $prefix $DISTRIBUTION_ID $OS_VERSION

$SUDO rm -f $prefix/setup

$SUDO chown $USER -R $prefix

echo "SALOME installation terminated, to start:"
echo "$ $prefix/salome"
