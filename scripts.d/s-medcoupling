
function s-medcoupling-vcs()
{
    echo default
    echo none
    echo git
    echo https://gitlab.pleiade.edf.fr/salome/medcoupling
}

function s-medcoupling-cea-vcs()
{
    echo edf
    echo none
    echo git
    echo https://codev-tuleap.cea.fr/plugins/git/salome/medcoupling
}

function s-medcoupling-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo none
    echo none
    echo medcoupling-$VERSION.tar.gz
}

function s-medcoupling-ng-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo cp
    echo $SCBI_BDIR/s-salome-tar/archive-src/ARCHIVES
    echo MEDCOUPLING.tgz
}

function s-medcoupling-common-build-depends()
{
    echo s-cmake
}

function s-medcoupling-ng-build-depends()
{
    echo s-salome-bin
}

function s-medcoupling-build-depends()
{
    local DISDOC=$(is-enabled no-doc)

    [[ -z ${DISDOC} ]] && echo os@-sphinx-common
    [[ -z ${DISDOC} ]] && echo os@-sphinx-intl
    echo os@-python3-sphinx-rtd-theme
    echo os@-cppunit-dev
    echo s-swig
}

function s-medcoupling-ptscotch-depends()
{
    echo s-ptscotch
}

function s-medcoupling-scotch-depends()
{
    echo s-scotch
}

function s-medcoupling-mpi-depends()
{
    echo s-openmpi
}

function s-medcoupling-common-depends()
{
    echo os@-metis-dev
    echo os@-tirpc-dev

    echo s-salome-configuration
}

function s-medcoupling-default-depends()
{
    echo s-medfichier
}

function s-medcoupling-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    MEDCOUPLING_ROOT_DIR $PREFIX

    add-to-var PATH                 $PREFIX/bin
    add-to-var MEDCoupling_DIR      $PREFIX/cmake_files
    add-to-var LD_LIBRARY_PATH      $PREFIX/lib
    add-to-var LIBRARY_PATH         $PREFIX/lib
    add-to-var C_INCLUDE_PATH       $PREFIX/include
    add-to-var CPLUS_INCLUDE_PATH   $PREFIX/include
    add-to-var PYTHONPATH           $PREFIX/tests/MEDLoader_Swig
    add-to-var PYTHONPATH           $PREFIX/tests/MEDCoupling_Swig
    add-to-var PYTHONPATH           $PREFIX/tests/MEDPartitioner_Swig
    add-to-var PYTHONPATH           \
               $PREFIX/lib/python$PYTHON_VERSION/site-packages
    add-to-var CMAKE_PREFIX_PATH    $MEDCOUPLING_ROOT_DIR/cmake_files
}

function s-medcoupling-ctest-dir()
{
    local PREFIX=$1

    echo $PREFIX/tests
}

function s-medcoupling-mpi-config-options()
{
    echo -DSALOME_USE_MPI=ON
    echo -DMEDCOUPLING_USE_MPI=ON

    echo -DCMAKE_CXX_COMPILER=$(get-os-bin mpicxx)
}

function s-medcoupling-ptscotch-config-options()
{
    echo -DMEDCOUPLING_PARTITIONER_SCOTCH=OFF
    echo -DMEDCOUPLING_PARTITIONER_PTSCOTCH=ON

    echo -DPTSCOTCH_INCLUDE_DIRS=$PTSCOTCH_INCLUDE_DIRS
    echo -DPTSCOTCH_ERR_LIBRARIES=$PTSCOTCH_ERR_LIBRARIES
    echo -DPTSCOTCH_LIBRARIES=$PTSCOTCH_LIBRARIES
}

function s-medcoupling-scotch-config-options()
{
    echo -DMEDCOUPLING_PARTITIONER_SCOTCH=ON
    echo -DMEDCOUPLING_PARTITIONER_PTSCOTCH=OFF

    echo -DSCOTCH_INCLUDE_DIRS=$SCOTCH_INCLUDE_DIRS
    echo -DSCOTCH_ERR_LIBRARIES=$SCOTCH_ERR_LIBRARIES
    echo -DSCOTCH_LIBRARIES=$SCOTCH_LIBRARIES
}

function s-medcoupling-ng-config-options()
{
    echo -DMEDCOUPLING_ENABLE_PYTHON=ON
    echo -DMEDCOUPLING_PARTITIONER_SCOTCH=OFF
    echo -DMEDCOUPLING_PARTITIONER_PTSCOTCH=ON
    echo -DMEDCOUPLING_USE_MPI=ON

    echo -DPTSCOTCH_INCLUDE_DIRS=$PTSCOTCH_INCLUDE_DIRS
    echo -DPTSCOTCH_ERR_LIBRARIES=$PTSCOTCH_ERR_LIBRARIES
    echo -DPTSCOTCH_LIBRARIES=$PTSCOTCH_LIBRARIES
}

function s-medcoupling-common-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local CDEBUG=$(is-enabled cmake-debug)
    local DISDOC=$(is-enabled no-doc)

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE Release)
    echo -DMEDCOUPLING_USE_64BIT_IDS=ON
    echo -DMED_INT_IS_LONG=ON
    echo -DHDF5_LIBRARIES=$HDF5_LIBRARIES
    echo -DMEDCOUPLING_ENABLE_PARTITIONER=ON
    echo -DMEDCOUPLING_PARTITIONER_PARMETIS=OFF
    echo -DMEDCOUPLING_PARTITIONER_METIS=ON
    echo -DMEDCOUPLING_ENABLE_RENUMBER=ON
    echo -DMEDCOUPLING_MICROMED=OFF
    echo -DMEDCOUPLING_BUILD_TESTS=ON
    echo ${CDEBUG:+"-DSALOME_CMAKE_DEBUG=ON"}
    echo ${DISDOC:+"-DMEDCOUPLING_BUILD_DOC=OFF"}
}

function s-medcoupling-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    cmake "${OPTIONS[@]}" ../src
}

function s-medcoupling-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-medcoupling-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-medcoupling-prefix()
{
    echo NONE
}
