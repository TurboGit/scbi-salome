
function s-atomic-vcs()
{
    echo default
    echo none
    echo git
    echo https://gitlab.pleiade.edf.fr/salome/atomic
}

function s-atomic-cea-vcs()
{
    echo edf
    echo none
    echo git
    echo https://codev-tuleap.cea.fr/plugins/git/salome/atomic
}

function s-atomic-salome-module()
{
    echo ATOMIC
}

function s-atomic-common-build-depends()
{
    echo s-cmake
}

function s-atomic-build-depends()
{
    local DISDOC=$(is-enabled no-doc)

    [[ -z ${DISDOC} ]] && echo os@-python3-sphinx
    [[ -z ${DISDOC} ]] && echo os@-sphinx-intl

    echo s-python-modules
}

function s-atomic-ng-build-depends()
{
    echo s-salome-bin
}

function s-atomic-common-depends()
{
    echo s-salome-configuration
    echo s-python-modules
    echo s-gdal
    echo s-boost
    echo s-qt
    echo s-pyqt
}

function s-atomic-default-depends()
{
    echo s-salome-kernel
    echo s-salome-gui
}

function s-atomic-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var ATOMIC_ROOT_DIR       $PREFIX

    add-to-var CMAKE_PREFIX_PATH  $PREFIX/adm_local/cmake_files
    add-to-var LD_LIBRARY_PATH    $PREFIX/lib/salome
    add-to-var C_INCLUDE_PATH     $PREFIX/include
    add-to-var CPLUS_INCLUDE_PATH $PREFIX/include

    add-to-var SALOME_MODULES     ATOMIC
    add-to-var SalomeAppConfig    $PREFIX/share/salome/resources/atomic
}

function s-atomic-config-options()
{
    local PREFIX=$1
    local TARGET=$2

    local CDEBUG=$(is-enabled cmake-debug)

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
    echo -DCMAKE_INCLUDE_DIRECTORIES_BEFORE=ON
    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE Release)
    echo ${CDEBUG:+"-DSALOME_CMAKE_DEBUG=ON"}

    echo -DGDAL_ROOT_DIR=$GDAL_ROOT_DIR
}

function s-atomic-config()
{
    local PREFIX=$1
    local TARGET=$2

    local OPTIONS=()
    get-config-options OPTIONS $PREFIX $TARGET $VARIANT

    cmake "${OPTIONS[@]}" ../src
}

function s-atomic-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-atomic-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-atomic-prefix()
{
    echo NONE
}
