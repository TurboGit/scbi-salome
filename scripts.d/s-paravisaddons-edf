
function s-paravisaddons-edf-vcs()
{
    echo default
    echo none
    echo git
    echo https://git.forge.pleiade.edf.fr/git/paravisaddons
}

function s-paravisaddons-edf-common-build-depends()
{
    echo s-cmake
}

function s-paravisaddons-edf-ngwin-build-depends()
{
    echo s-visual-c
    echo s-salome-bin
}

function s-paravisaddons-edf-ng-build-depends()
{
    # To avoid Paraview configuration issue with cmake < 3.13 to
    # detect cmake native.
    echo s-cmake
    echo s-salome-bin
}

function s-paravisaddons-edf-common-depends()
{
    echo s-salome-configuration
}

function s-paravisaddons-edf-default-depends()
{
    echo s-hdf5

    echo s-medcoupling
    echo s-medfichier
    echo s-paravis
}

function s-paravisaddons-edf-cronos-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    PARAVISADDONS_ROOT_DIR $PREFIX

    add-to-var PV_PLUGIN_PATH         $PREFIX/lib64
    add-to-var PYTHONPATH             $PREFIX/lib64

}

function s-paravisaddons-edf-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    PARAVISADDONS_ROOT_DIR $PREFIX
    set-var    INF_SERVER_URL         "$(scbi-store-get-key INFURL)"

    add-to-var PATH                   $PREFIX/bin
    add-to-var PV_PLUGIN_PATH         $PREFIX/lib
    add-to-var PYTHONPATH             $PREFIX/lib
}

function s-paravisaddons-edf-ctest-dir()
{
    local PREFIX=$1

    echo $PREFIX/tests
}

function s-paravisaddons-edf-common-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local CDEBUG=$(is-enabled cmake-debug)

    echo -DCMAKE_BUILD_TYPE=$(get-build-type CMAKE Release)
    echo ${CDEBUG:+"-DSALOME_CMAKE_DEBUG=ON"}
    echo -DPARAVIEW_PLUGIN_ENABLE_pqEDFVisuClusterServerLauncher=YES
}

function s-paravisaddons-edf-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_INSTALL_PREFIX=$PREFIX
}

function s-paravisaddons-edf-ngwin-config-options()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    echo -DCMAKE_INSTALL_PREFIX=$(cygpath -w "$PREFIX")

    echo -DCONFIGURATION_ROOT_DIR=$(cygpath -w "$CONFIGURATION_ROOT_DIR")

    echo -DPython3_EXECUTABLE="$Python3_EXECUTABLE"
    echo -DPython3_LIBRARIES="$Python3_LIBRARIES"
    echo -DPython3_INCLUDE_DIRS="$Python3_INCLUDE_DIRS"

    echo -DLIBXML2_LIBRARY="$LIBXML2_LIBRARY"
    echo -DFREETYPE_LIBRARY="$FREETYPE_LIBRARY"
    echo -DZLIB_LIBRARY="$ZLIB_LIBRARY"
    echo -DCGNS_LIBRARY="$CGNS_LIBRARY"
}

function s-paravisaddons-edf-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS="$(get-config-options $PREFIX $TARGET $VARIANT)"

    cmake $OPTIONS ../src
}

function s-paravisaddons-edf-ngwin-config()
{
    local PREFIX=$1
    local TARGET=$2
    local VARIANT=$3

    local OPTIONS="$(get-config-options $PREFIX $TARGET $VARIANT)"

    cmake -G "NMake Makefiles" $OPTIONS ../src
}

function s-paravisaddons-edf-build()
{
    local PREFIX=$1
    local TARGET=$2

    make -j$SCBI_JOBS
}

function s-paravisaddons-edf-ngwin-build()
{
    local PREFIX=$1
    local TARGET=$2

    nmake
}

function s-paravisaddons-edf-install()
{
    local PREFIX=$1
    local TARGET=$2

    make install
}

function s-paravisaddons-edf-ngwin-install()
{
    local PREFIX=$1
    local TARGET=$2

    nmake install
}

function s-paravisaddons-edf-prefix()
{
    echo NONE
}
