
with-variant native os@-scotch:[v] os@-scotch-dev:[v]

function s-scotch-vcs()
{
    echo edf
    echo none
    echo git
    echo https://gitlab.inria.fr/scotch/scotch
}

function s-scotch-archive()
{
    local VERSION=$1

    echo default
    echo none
    echo wget
    echo https://minio.retd.edf.fr/salome/YAMM/Public/SALOME/sources/prerequis
    echo scotch-$VERSION.tar.gz
}

function s-scotch-depends()
{
    local PREFIX=$1
    local TARGET=$2

    echo os@-flex
    echo os@-bison
}

function s-scotch-out-of-tree()
{
    echo false
}

function s-scotch-env()
{
    local PREFIX=$1
    local TARGET=$2

    set-var    SCOTCH_ROOT_DIR  $PREFIX

    add-to-var PATH             $PREFIX/bin
    add-to-var LD_LIBRARY_PATH  $PREFIX/lib
    add-to-var C_INCLUDE_PATH   $PREFIX/include
    add-to-var CXX_INCLUDE_PATH $PREFIX/include
}

function s-scotch-pre-config()
{
    local PREFIX=$1
    local TARGET=$2

    sed -e "s%CFLAGS\([[:space:]]*\)=\([[:space:]]*\)\(.*\)%CFLAGS\1=\2-fPIC \3%g" \
        -e "s%LDFLAGS\([[:space:]]*\)=\([[:space:]]*\)\(.*\)%LDFLAGS\1=\2 \3 -lpthread%g" \
        src/Make.inc/Makefile.inc.x86-64_pc_linux2 \
        > src/Makefile.inc
}

function s-scotch-config()
{
    local PREFIX=$1
    local TARGET=$2

    cmake -DCMAKE_INSTALL_PREFIX=$PREFIX -DBUILD_SHARED_LIBS=ON -DBUILD_LIBSCOTCHMETIS=OFF ../src
}

function s-scotch-build()
{
    local PREFIX=$1
    local TARGET=$2

    cd src &&
        make -j$SCBI_JOBS scotch
}

function s-scotch-install()
{
    local PREFIX=$1
    local TARGET=$2

    cd src &&
        make install
}

function s-scotch-prefix()
{
    echo NONE
}
